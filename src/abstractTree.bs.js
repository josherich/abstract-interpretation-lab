// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var AbstractSyntaxExpressions$AiProject = require("./abstractSyntaxExpressions.bs.js");

function vars(s) {
  var collect = function (s) {
    var exit = 0;
    switch (s.tag | 0) {
      case 1 : 
          return /* :: */[
                  s[0],
                  AbstractSyntaxExpressions$AiProject.varsa(s[1])
                ];
      case 4 : 
          return Pervasives.$at(AbstractSyntaxExpressions$AiProject.varsb(s[0]), Pervasives.$at(collect(s[1]), collect(s[2])));
      case 3 : 
      case 5 : 
          exit = 1;
          break;
      case 2 : 
      case 6 : 
          return /* [] */0;
      case 0 : 
      case 7 : 
          return collect_stmt_list(s[0]);
      
    }
    if (exit === 1) {
      return Pervasives.$at(AbstractSyntaxExpressions$AiProject.varsb(s[0]), collect(s[1]));
    }
    
  };
  var collect_stmt_list = function (sl) {
    if (sl) {
      return Pervasives.$at(collect(sl[0]), collect_stmt_list(sl[1]));
    } else {
      return /* [] */0;
    }
  };
  return List.sort_uniq(Caml_obj.caml_compare, collect(s));
}

exports.vars = vars;
/* No side effect */
